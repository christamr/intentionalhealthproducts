<div id="collection">
  {% paginate collection.products by settings.pagination_limit %}
  <!-- Begin collection info -->
  <div class="row">
    <div class="span12">
      
      <!-- Begin sort collection -->
      <div class="clearfix">
      <div class="width-wrapper products-page">
        <h1 class="collection-title">{{ collection.title }}</h1>
        {% if settings.collection_tags %}        
          {% if collection.all_tags.size > 0 %}
      
          {% endif %}        
        {% endif %}
        {% if settings.collection_sort and collection.products_count > 1 %}
          
        {% endif %}
      </div>
      </div>
      <!-- End sort collection -->
      
      <!-- Begin collection description -->
      {% if collection.description != "" %}
        {{ collection.description }}
      {% endif %}
      <!-- End collection description -->
      
    </div>
  </div>
  <!-- End collection info -->
  
  <!-- Begin no products -->
  {% if collection.products.size == 0 %}
  <div class="row">
    <div class="span12 expanded-message">
      <p>No products found</p>
    </div>
  </div>
  {% endif %}
  
  <div class="row products">
    <div class="width-wrapper">
    {% for product in collection.products limit: settings.pagination_limit %}
    {% include 'product-loop' with collection.handle %}
    {% endfor %}
  </div>
  </div>
  
  {% include 'pagination' %}

  {% endpaginate %}
  <!-- End no products -->
  
</div>

<section class="cta-section">
  <div class="width-wrapper">
    <h3>need some help?</h3>
    {{ 'cta-decoration.png' | asset_url | img_tag }}
    <p><a class="go-shop" href="#">Contact Carla</a> <span class="or">or</span> <a class="services" href="#">View Articles</a></p>
  </div>
</section>

<script>
  Shopify.queryParams = {};
  if (location.search.length) {
    for (var aKeyValue, i = 0, aCouples = location.search.substr(1).split('&'); i < aCouples.length; i++) {
      aKeyValue = aCouples[i].split('=');
      if (aKeyValue.length > 1) {
        Shopify.queryParams[decodeURIComponent(aKeyValue[0])] = decodeURIComponent(aKeyValue[1]);
      }
    }
  }
  var collFilters = jQuery('.coll-filter');
  collFilters.change(function() {
      var newTags = [];
      var newURL = '';
      delete Shopify.queryParams.page;
      collFilters.each(function() { 
        if (jQuery(this).val()) {
          newTags.push(jQuery(this).val());
        }
      });
      {% if collection.handle %}
      newURL = '/collections/' + '{{ collection.handle }}';
      if (newTags.length) {
        newURL += '/' + newTags.join('+');
      }
      var search = jQuery.param(Shopify.queryParams);
      if (search.length) {
        newURL += '?' + search;
      }
      location.href = newURL;    
      {% else %}
      if (newTags.length) {
        Shopify.queryParams.constraint = newTags.join('+');        
      }
      else {
        delete Shopify.queryParams.constraint;
      }
      location.search = jQuery.param(Shopify.queryParams);
      {% endif %}      
  });
  jQuery('.sort-by')
    .val('{{ collection.sort_by | default: collection.default_sort_by  }}')
    .bind('change', function() {
      Shopify.queryParams.sort_by = jQuery(this).val();
      location.search = jQuery.param(Shopify.queryParams);
    });
</script>